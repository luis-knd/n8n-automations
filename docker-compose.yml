networks:
  n8n_backend:
    driver: bridge

volumes:
  n8n_app_data:
  n8n_pg_data:

secrets:
  n8n_postgres_password:
    file: ./secrets/postgres_password.txt

services:
  n8n_postgres:
    image: postgres:16-alpine
    container_name: n8n_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/n8n_postgres_password
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: Atlantic/Canary
    volumes:
      - n8n_pg_data:/var/lib/postgresql/data
    networks:
      - n8n_backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 6
    secrets:
      - n8n_postgres_password

  n8n_app:
    image: n8nio/n8n:1.114.2
    container_name: n8n_app
    restart: unless-stopped
    depends_on:
      n8n_postgres:
        condition: service_healthy
    ports:
      - "6588:5678"
    environment:
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: 5678
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL}
      WEBHOOK_URL: ${WEBHOOK_URL}
      N8N_SECURE_COOKIE: ${N8N_SECURE_COOKIE}

      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      N8N_DIAGNOSTICS_ENABLED: ${N8N_DIAGNOSTICS_ENABLED}
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL}

      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: n8n_postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - n8n_app_data:/home/node/.n8n
    networks:
      - n8n_backend
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:5678/healthz" ]
      interval: 10s
      timeout: 5s
      retries: 6
